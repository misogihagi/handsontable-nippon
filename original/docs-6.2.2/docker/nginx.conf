user  www-data www-data;

events {
    worker_connections  1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;

    sendfile            on;
    keepalive_timeout   65;

    gzip  on;

    server {
        listen          80;
        server_name     localhost;

        set $latest_hot next;

        root /usr/share/nginx/html/$latest_hot/generated;

        rewrite ^/docs$ /docs/ last;

        location ^~ /docs/ {
            # --- remove /x.x.x from path of the requested file (in file system) ---
            rewrite ^/docs/(?:(?:\d+.\d+.\d+)|next).*$ /$1 break;
            # --- redirect /latest or / to the latest version ---
            rewrite ^/docs/(?:latest)?(?:\/(.+))?$ $scheme://$http_host/docs/$latest_hot/$1 permanent;

            # --- rewrite url without hot version into latest version ---
            if ($request_uri !~ "^/((\d+\.\d+\.\d+(?:\-(?:beta|alpha)(?:\d+)?)?)|latest|next|static|scripts|robots\.txt)(.*)$") {
                rewrite ^/docs/(.*)$ $scheme://$http_host/docs/$latest_hot/$1 permanent;
            }

            # --- redirect /x.x.x/ to /x.x.x/tutorial-introduction.html ---
            location ~ "^/docs/((\d+\.\d+\.\d+(?:\-(?:beta|alpha)(?:\d+)?)?)|next)(?:\/)?$" {
                rewrite ^/docs/((\d+\.\d+\.\d+(?:\-(?:beta|alpha)(?:\d+)?)?)|next)(.*)$ /docs/$1/tutorial-introduction.html permanent;
            }

            location ~ ^/docs/((?:\d+\.\d+\.\d+(?:\-(?:beta|alpha)(?:\d+)?)?)|next)(?:\/(.+))?$ {
                alias /usr/share/nginx/html/$1/generated/$2;
            }
        }
    }
}
