<?js
  var data = obj;
  var self = this;

  var sourceUrl = '';
  var sourceName = '';

  if (data.meta) {
    if (/^handsontable\/src/.test(meta.filename)) {
      sourceName = meta.filename.replace('handsontable/src/', '') + '#L' + meta.lineno;
      sourceUrl = 'https://github.com/handsontable/handsontable/blob/' + env.opts.query.version + '/src/' + sourceName;
    } else {
      sourceName = meta.filename.replace('handsontable-pro/src/', '') + '#L' + meta.lineno;
      sourceUrl = 'https://github.com/handsontable/handsontable-pro/blob/' + env.opts.query.version + '/src/' + sourceName;
    }
  }
?>
<dt>
  <?js if (data.meta) {?>
    <div class="tag-source">
      <a target="_blank" href="<?js= sourceUrl ?>"><?js= sourceName ?></a>
    </div>
  <?js } ?>
  <div class="nameContainer<?js if (data.inherited) { ?>inherited<?js } ?>">
    <h4 class="name" id="<?js= id ?>">
      <?js if (data.inherited || data.inherits) { ?>
        <span class="inherited"><?js= this.linkto(data.inherits, 'inherited') ?></span>
      <?js } ?>
      <?js if (kind !== 'class') { ?>
        <?js= data.attribs + (kind === 'class' ? 'new ' : '') + (data.scope === 'static' ? longname : name) + (kind !== 'event' ? data.signature : '') ?>
      <?js } ?>
    </h4>
  </div>

  <?js if (data.summary) { ?>
    <p class="summary"><?js= summary ?></p>
  <?js } ?>
</dt>
<dd>
  <?js if (data.description) { ?>
    <div class="description">
      <?js= data.description ?>
    </div>
  <?js } ?>

  <?js if (kind === 'event' && data.type && data.type.names) { ?>
    <h5 class="method-type">Type:</h5>
    <ul>
      <li>
        <?js= self.partial('type.tmpl', data.type.names) ?>
      </li>
    </ul>
  <?js } ?>

  <?js if (data['this']) { ?>
    <h5 class="method-this">This:</h5>
    <ul><li><?js= this.linkto(data['this'], data['this']) ?></li></ul>
  <?js } ?>

  <?js if (data.params && params.length) { ?>
    <h5 class="method-parameters">Parameters:</h5>
    <?js= this.partial('params.tmpl', params) ?>
  <?js } ?>

  <?js= this.partial('details.tmpl', data) ?>

  <?js if (data.fires && fires.length) { ?>
    <h5 class="method-fires">Fires:</h5>
    <ul>
      <?js fires.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
      <?js }); ?>
    </ul>
  <?js } ?>

  <?js if (data.listens && listens.length) { ?>
    <h5>Listens to Events:</h5>
    <ul>
      <?js listens.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
      <?js }); ?>
    </ul>
  <?js } ?>

  <?js if (data.listeners && listeners.length) { ?>
    <h5>Listeners of This Event:</h5>
    <ul>
      <?js listeners.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
      <?js }); ?>
    </ul>
  <?js } ?>

  <?js if (data.exceptions && exceptions.length) { ?>
    <h5>Throws:</h5>
    <?js if (exceptions.length > 1) { ?>
      <ul>
        <?js exceptions.forEach(function(r) { ?>
          <li><?js= self.partial('exceptions.tmpl', r) ?></li>
        <?js }); ?>
      </ul>
    <?js } else { ?>
      <?js exceptions.forEach(function(r) { ?>
        <?js= self.partial('exceptions.tmpl', r) ?>
      <?js }); ?>
    <?js } ?>
  <?js } ?>

  <?js if (data.returns && returns.length === 1 ) { ?>
    <h5 class="method-returns">Returns: <?js= self.partial('returns.tmpl', data.returns) ?></h5>
  <?js } else if (data.returns && returns.length > 1 ) { ?>
    <h5 class="method-returns">Returns:</h5>
    <?js= self.partial('returns.tmpl', data.returns) ?>
  <?js } ?>

  <?js if (data.examples && examples.length) { ?>
    <h5 class="method-example">Example<?js= examples.length > 1? 's':'' ?></h5>
    <?js= this.partial('examples.tmpl', examples) ?>
  <?js } ?>
</dd>
