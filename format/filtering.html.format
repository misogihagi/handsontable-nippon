<div class="static-content">
 <div class="index-list">
  <ul>
   <li>
    <a href="#overview">
     content1
    </a>
   </li>
   <li>
    <a href="#setup">
     content2
    </a>
   </li>
   <li>
    <a href="#dropdown">
     content3
    </a>
   </li>
   <li>
    <a href="#custom-implementations">
     content4
    </a>
   </li>
  </ul>
 </div>
 <div class="example-container clearfix">
  <h3 id="overview">
   content5
  </h3>
  <p>
   The
   <i>
    content6
   </i>
   plugin allows filtering the data in the table's columns using a range of pre-defined conditions.
  </p>
  <p>
   This plugin uses the
   <a href="/docs/&lt;?js= version ?&gt;/demo-trimming-rows.html">
    content7
   </a>
   plugin to hide the filtered out rows.
      It does not render these rows at all, which is good for the overall table performance.
  </p>
  <h3 id="setup">
   content8
  </h3>
  <p>
   To enable the plugin you need to set the
   <code>
    content9
   </code>
   property to
   <code>
    content10
   </code>
   and enable the filters dependency, which is
      the
   <a href="/docs/&lt;?js= version ?&gt;/demo-dropdown-menu.html">
    content11
   </a>
   plugin.
  </p>
  <div data-jsfiddle="example1">
   <div>
    <div class="hot" id="example1">
    </div>
   </div>
  </div>
  <div class="codeLayout">
   <div class="buttons">
    <button class="jsFiddleLink" data-runfiddle="example1">
     <i class="fa fa-jsfiddle">
     </i>
     Edit in jsFiddle
    </button>
    <button class="dump" data-dump="#example1" data-instance="hot" name="dump" title="Print current data source to console">
     <i class="fa fa-terminal">
     </i>
     Dump data to console
    </button>
   </div>
   <script data-dont-display="true" data-jsfiddle="example1">
    content12
   </script>
   <script data-jsfiddle="example1">
    content13
   </script>
  </div>
  <h3 id="dropdown">
   content14
  </h3>
  <p>
   content15
  </p>
  <div data-jsfiddle="example2">
   <div>
    <div class="hot" id="example2">
    </div>
   </div>
  </div>
  <div class="codeLayout">
   <div class="buttons">
    <button class="jsFiddleLink" data-runfiddle="example2">
     <i class="fa fa-jsfiddle">
     </i>
     Edit in jsFiddle
    </button>
    <button class="dump" data-dump="#example2" data-instance="hot" name="dump" title="Print current data source to console">
     <i class="fa fa-terminal">
     </i>
     Dump data to console
    </button>
   </div>
   <script data-dont-display="true" data-jsfiddle="example2">
    content16
   </script>
   <script data-jsfiddle="example2">
    content17
   </script>
  </div>
  <h3 id="custom-implementations">
   content18
  </h3>
  <p>
   content19
  </p>
  <h4>
   content20
  </h4>
  <p>
   We placed a basic
   <code>
    content21
   </code>
   element inside a column’s header (A, B, C…), right below the label of the column.
      For a better visibility it is separated with a horizontal line. The data is being filtered as you type - with a 200 ms delay.
      The filter element has been excluded from the selection event so when you click on it, the column doesn’t get selected.
  </p>
  <p>
   content22
  </p>
  <div data-jsfiddle="example3">
   <div>
    <div class="hot" id="example3">
    </div>
   </div>
  </div>
  <div class="codeLayout">
   <div class="buttons">
    <button class="jsFiddleLink" data-runfiddle="example3">
     <i class="fa fa-jsfiddle">
     </i>
     Edit in jsFiddle
    </button>
    <button class="dump" data-dump="#example3" data-instance="hot" name="dump" title="Print current data source to console">
     <i class="fa fa-terminal">
     </i>
     Dump data to console
    </button>
   </div>
   <style data-jsfiddle="common">
    content23
   </style>
   <script data-dont-display="true" data-jsfiddle="example3">
    content24
   </script>
   <script data-jsfiddle="example3">
    content25
   </script>
  </div>
  <h4>
   content26
  </h4>
  <p>
   The external Filter component is controlling the main table by passing values for particular columns.
      Only a fraction of the code is related with Handsontable API (e.g.
   <code>
    content27
   </code>
   ,
   <code>
    content28
   </code>
   ,
   <code>
    content29
   </code>
   ).
      A significantly more glue code handles the Filter component itself.
  </p>
  <p>
   content30
  </p>
  <div>
   <div class="demo-container">
    <div id="externalFilter">
     <div class="demo-columnChoose">
      <label>
       content31
      </label>
      <select>
      </select>
     </div>
     <div class="demo-filterSelect">
      <div class="demo-controllers">
       <div>
        <input checked="true" id="filtersSelectAll" type="checkbox"/>
        <label for="filtersSelectAll">
         content32
        </label>
       </div>
      </div>
      <div class="demo-items">
      </div>
     </div>
     <div class="button-holder">
      <div class="buttons">
       <button class="green demo-apply">
        content33
       </button>
       <button class="demo-clear">
        content34
       </button>
      </div>
     </div>
    </div>
    <div class="hot" id="example4">
    </div>
   </div>
  </div>
  <div class="codeLayout">
   <div class="buttons">
    <button class="jsFiddleLink" data-link="http://jsfiddle.net/vszLvxnL/1/" data-runfiddle="example4">
     <i class="fa fa-jsfiddle">
     </i>
     Edit in jsFiddle
    </button>
    <button class="dump" data-dump="#example4" data-instance="hot" name="dump" title="Print current data source to console">
     <i class="fa fa-terminal">
     </i>
     Dump data to console
    </button>
   </div>
   <style data-jsfiddle="common">
    content35
   </style>
   <script data-dont-display="true" data-jsfiddle="example4">
    content36
   </script>
   <script data-jsfiddle="example4">
    content37
   </script>
  </div>
 </div>
 <p class="gap-top-xsmall">
  <a class="edit-doc" href="https://github.com/handsontable/docs/edit/&lt;?js= version ?&gt;/tutorials/filtering.html" target="_blank">
   content38
  </a>
 </p>
</div>
